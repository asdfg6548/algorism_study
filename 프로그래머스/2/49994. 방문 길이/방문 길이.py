def solution(dirs):
    # 중복되지 않는 길을 저장하기 위한 집합 생성
    sets = set()
    # 시작 좌표 설정
    y, x = 0, 0
    # 각 명령어에 따른 이동 방향 정의 (위, 아래, 오른쪽, 왼쪽)
    udrl = {'U': (1, 0), 'D': (-1, 0), 'R': (0, 1), 'L': (0, -1)}
    
    # 주어진 명령어 문자열을 하나씩 처리
    for d in dirs:
        # 현재 명령어에 따른 이동 방향
        dy, dx = udrl[d]
        # 이동 후 새로운 좌표 계산
        ny = y + dy
        nx = x + dx
        # 좌표가 경계를 넘지 않는 경우에만 이동 처리
        if -5 <= ny <= 5 and -5 <= nx <= 5:
            # 현재 위치에서 다음 위치로의 경로를 집합에 추가
            sets.add(((y, x), (ny, nx)))
            # 반대 방향의 경로도 추가하여 양방향 이동을 고려
            sets.add(((ny, nx), (y, x)))
            # 현재 좌표를 이동된 위치로 업데이트
            y = ny
            x = nx
    # 양방향으로 저장된 경로를 반으로 나누어 실제 경로 길이 반환
    return len(sets) // 2
